基础环境搭建

1：创建一个maven工程
2：引入项目依赖的jar包
3：引入bootstrap前端框架

4：编写ssm整合的关键配置文件
   web.xml
   spring
   springmvc
   mybatis
       使用mybatis的逆向工程生成对应的表和数据

5：测试mapper

查询

1：访问index.jsp页面
2：index.jsp页面发送出查询员工列表请求
3：EmployeeController来接受请求，查出员工数据
4：来到list.jsp页面进行展示

URI：/emps

查询 ajax 整体逻辑
1:index.jsp页面直接发送ajax请求进行员工分页数据的查询
2:服务器将查出的数据，以json字符串的形式返回给浏览器
3:浏览器收到字符串，可以使用js对json进行解析，使用js通过dom增删改的形式改变页面
4:返回json 实现客户端的无关性  -->浏览器和android/ios都可以


新增的逻辑
1:在index的页面点击"新增"按钮 
2:弹出新增对话框
3:去数据库查询部门列表，显示在对话框中
4:用户输入数据-->并完成校验
jquery前端校验  ajax用户名重复校验，后端校验-->重要的数据JSR303   在数据库用户民处应添加唯一约束
5:完成保存

修改的逻辑
1:点击编辑
2:弹出用户修改的模态框 在模态框中显示用户信息-->查询数据库
3:点击更新，完成用户修改

删除的逻辑
1:单个删除

